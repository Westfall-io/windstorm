name: Test Commit

on:
  push:
    branches:
      - '*'
      - '!main'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install SysML environment and make mocks
        run: |
          pip install jupyter
          wget https://github.com/Systems-Modeling/SysML-v2-Pilot-Implementation/releases/download/2024-05/jupyter-sysml-kernel-0.42.0.zip
          unzip jupyter-sysml-kernel-0.42.0.zip -d /tmp
          python /tmp/install.py --prefix=/opt/hostedtoolcache/Python/3.12.4/x64/
          pip install pytest-timeout pytest-html papermill nbformat
          python ./tests/mocks/make_mocks.py
      - name: Test ${{ github.event.push.head }} coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pip install coveralls pytest responses
          python -m coverage run --source=src -m pytest tests && coverage report
          coverage html
          coveralls
      - name: Test with pytest
        run: |
          pytest -rP --timeout=300 tests --doctest-modules --html=report-${{ matrix.python-version }}.html --self-contained-html --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload test coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage.html
          path: htmlcov/index.html
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-junit-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-html-results-${{ matrix.python-version }}
          path: report-${{ matrix.python-version }}.html
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
